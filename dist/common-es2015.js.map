{"version":3,"sources":["./src/app/_helpers/tools/header.tool.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAmD;AAEjB;AAE3B,MAAM,MAAM,GAAG,IAAI,6DAAW,CAAC;IACpC,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE,GAAG;IAClC,8BAA8B,EAAE,GAAG;CAEpC,CAAC,CAAC;AAEI,MAAM,WAAW,GAAG,CAAC,KAAwB,EAAE,EAAE;IACtD,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;QACrC,MAAM,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC;KAC3B;SAAM;QACL,OAAO,CAAC,KAAK,CACX,yBAAyB,KAAK,CAAC,MAAM,IAAI;YACzC,aAAa,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;KAC/B;IACD,OAAO,gDAAU,CAAC,KAAK,CAAC,CAAC;AAC3B,CAAC","file":"common-es2015.js","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\n\r\nexport const header = new HttpHeaders({\r\n  'Content-Type': 'application/json',\r\n  'Access-Control-Allow-Origin': '*',\r\n  'Access-Control-Allow-Headers': '*',\r\n\r\n});\r\n\r\nexport const handleError = (error: HttpErrorResponse) => {\r\n  if (error.error instanceof ErrorEvent) {\r\n    throw error.error.message;\r\n  } else {\r\n    console.error(\r\n      `Backend returned code ${error.status}, ` +\r\n      `body was: ${error.error}`);\r\n  }\r\n  return throwError(error);\r\n}\r\n"],"sourceRoot":"webpack:///"}