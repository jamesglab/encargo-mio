{"version":3,"sources":["webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/auth/_services/auth.service.ts","webpack:///src/app/account/auth/auth-routing.ts","webpack:///src/app/account/auth/auth.module.ts","webpack:///src/app/account/auth/login/login.component.html","webpack:///src/app/account/auth/login/login.component.ts","webpack:///src/app/account/auth/passwordreset/passwordreset.component.html","webpack:///src/app/account/auth/passwordreset/passwordreset.component.ts","webpack:///src/app/account/auth/recoverpwd2/recoverpwd2.component.html","webpack:///src/app/account/auth/recoverpwd2/recoverpwd2.component.ts","webpack:///src/app/account/auth/register2/register2.component.html","webpack:///src/app/account/auth/register2/register2.component.ts","webpack:///src/app/account/auth/signup/signup.component.html","webpack:///src/app/account/auth/signup/signup.component.ts","webpack:///src/app/core/services/user.service.ts"],"names":["routes","path","loadChildren","then","m","AuthModule","AccountRoutingModule","RouterModule","AccountModule","CommonModule","AuthService","http","router","_storageService","user","setUser","getAuthFromLocalStorage","credentials","clear","email","trim","post","environment","headers","header","pipe","map","res","setItem","token","localStorage","language","catchError","handleError","getItem","error","console","log","toLowerCase","url","password","encript","removeItem","navigate","queryParams","component","LoginComponent","SignupComponent","Register2Component","PasswordresetComponent","Recoverpwd2Component","Login2Component","AuthRoutingModule","ReactiveFormsModule","FormsModule","NgbAlertModule","UIModule","CarouselModule","formBuilder","route","_authService","submitted","year","Date","getFullYear","loginForm","group","Validators","returnUrl","snapshot","controls","invalid","login","getRawValue","subscribe","onSubmit","authenticationService","success","loading","resetForm","resetPassword","f","value","carouselOption","items","loop","margin","nav","dots","responsive","userService","successmsg","document","body","classList","add","signupForm","username","register","first","data","UserProfileService","get"],"mappings":"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","file":"src_app_account_account_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { header, handleError } from 'src/app/_helpers/tools/header.tool';\r\nimport { StorageService } from '../../../_services/storage.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private user: any = null;\r\n\r\n  constructor(private http: HttpClient,\r\n    // private landingService: LandingService,\r\n    private router: Router,\r\n    private _storageService: StorageService) {\r\n    this.setUser();\r\n  }\r\n\r\n  //USER MODEL\r\n  get currentUser(): any {\r\n    return this.user;\r\n  }\r\n\r\n  setUser() {\r\n    this.user = this.getAuthFromLocalStorage();\r\n  }\r\n\r\n  login(credentials: { email: string, password: string }): Observable<any> {\r\n\r\n    this._storageService.clear();\r\n    credentials.email = credentials.email.trim();\r\n\r\n    return this.http.post<any>(`${environment.microservices.user}auth`, credentials, { headers: header }).pipe(\r\n      map((res: any) => {\r\n        // localStorage.setItem(\"currentUser\", JSON.stringify({ user: res.user, token: res.token }));\r\n\r\n\r\n        this._storageService.setItem(\"currentUser\", { user: res.user, token: res.token });\r\n        localStorage.setItem(\"lang\", res.user.language || \"es\");\r\n        this.user = this.getAuthFromLocalStorage();\r\n        return res;\r\n      }),\r\n      catchError(handleError)\r\n    );\r\n  }\r\n\r\n  private getAuthFromLocalStorage() {\r\n    try {\r\n      return this._storageService.getItem(\"currentUser\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  recoverPassword(email: string): Observable<any> {\r\n    email = email.trim().toLowerCase();\r\n    return this.http.post<any>(\r\n      `https://9386296438b6.ngrok.io/api/v1/user/auth/send-recovery`, { email: email }, { headers: header }).pipe(\r\n        map((res: any) => {\r\n          return res;\r\n        }),\r\n        catchError(handleError)\r\n      );\r\n  }\r\n\r\n  resetPassword(url: string, password: any): Observable<any> {\r\n    return this.http.post<any>(`https://9386296438b6.ngrok.io/api/v1/user/auth/reset-password`,\r\n      { encript: url, password: password }, { headers: header }).pipe(\r\n        map((res: any) => {\r\n          return res;\r\n        }),\r\n        catchError(handleError)\r\n      )\r\n  }\r\n\r\n  async logout() {\r\n    await this._storageService.removeItem(\"currentUser\")\r\n    await this._storageService.clear();\r\n    this.router.navigate(['/auth'], {\r\n      queryParams: {},\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\n\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\nimport { Register2Component } from './register2/register2.component';\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'signup-2',\n        component: Register2Component\n    },\n    {\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n    {\n        path: 'recoverpwd-2',\n        component: Recoverpwd2Component\n    },\n    {\n        path: 'login-2',\n        component: Login2Component\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\n\nimport { UIModule } from '../../shared/ui/ui.module';\nimport { LoginComponent } from './login/login.component';\nimport { Login2Component } from './login2/login2.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { Register2Component } from './register2/register2.component';\nimport { Recoverpwd2Component } from './recoverpwd2/recoverpwd2.component';\n\nimport { AuthRoutingModule } from './auth-routing';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n@NgModule({\n  declarations: [LoginComponent, Login2Component, SignupComponent, PasswordresetComponent, Register2Component, Recoverpwd2Component],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgbAlertModule,\n    UIModule,\n    AuthRoutingModule,\n    CarouselModule\n  ]\n})\nexport class AuthModule { }\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Welcome Back !</h5>\n                  <p>Sign in to continue to Skote.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n              <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\">Email</label>\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\">Password</label>\n                  <div class=\"input-group auth-pass-inputgroup\">\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"Enter password\"\n                      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" aria-label=\"Password\"\n                      aria-describedby=\"password-addon\">\n\n                    <button class=\"btn btn-light ms-0\" type=\"button\" id=\"password-addon\"><i\n                        class=\"mdi mdi-eye-outline\"></i></button>\n                    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                      <span *ngIf=\"f.password.errors.required\">Password is required</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"form-check\">\n                  <input class=\"form-check-input\" type=\"checkbox\" id=\"remember-check\">\n                  <label class=\"form-check-label\" for=\"remember-check\">\n                      Remember me\n                  </label>\n              </div>\n\n                <div class=\"mt-3 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\">Log In</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i> Forgot\n                    your\n                    password?</a>\n                </div>\n              </form>\n            </div>\n\n          </div>\n        </div>\n        <div class=\"mt-5 text-center\">\n          <p>Don't have an account ? <a routerLink=\"/account/signup\" class=\"fw-medium text-primary\"> Signup\n              now\n            </a> </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div>\n    </div>\n  </div>\n\n  <!-- end container -->\n</div>\n<!-- end page -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\nimport { AuthService } from '../_services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\n\n/**\n * Login component\n */\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  error = '';\n  returnUrl: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private _authService: AuthService) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n\n    // reset login status\n    // this.authenticationService.logout();\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n\n      this._authService.login(this.loginForm.getRawValue()).subscribe((res: any) => {\n        console.log('llegamos al login',res)\n        this.router.navigate(['/dashboard']);\n      })\n\n    }\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\"> Reset Password</h5>\n                  <p>Re-Password with Skote.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n\n            <form class=\"needs-validation\" name=\"resetForm\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n              <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n              <div class=\"mb-3\">\n                <label for=\"email\">Email</label>\n\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                </div>\n              </div>\n              <div class=\"text-end\">\n                <button class=\"btn btn-primary w-md\" type=\"submit\">Reset</button>\n              </div>\n            </form>\n\n          </div> <!-- end card-body-->\n        </div>\n        <!-- end card -->\n        <div class=\"mt-5 text-center\">\n          <p>Remember It ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Sign In here</a> </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>\n<!-- end page -->","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\n\n/**\n * Reset-password component\n */\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  resetForm: FormGroup;\n  submitted = false;\n  error = '';\n  success = '';\n  loading = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n","<div>\n    <div class=\"container-fluid p-0\">\n        <div class=\"row g-0\">\n\n            <div class=\"col-xl-9\">\n                <div class=\"auth-full-bg pt-lg-5 p-4\">\n                    <div class=\"w-100\">\n                        <div class=\"bg-overlay\"></div>\n                        <div class=\"d-flex h-100 flex-column\">\n                            <div class=\"p-4 mt-auto\">\n                                <div class=\"row justify-content-center\">\n                                    <div class=\"col-lg-7\">\n                                        <div class=\"text-center\">\n\n                                            <h4 class=\"mb-3\"><i\n                                                    class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\n                                                    class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                            <div dir=\"ltr\">\n                                                <owl-carousel-o class=\"owl-theme auth-review-carousel\"\n                                                    [options]=\"carouselOption\">\n                                                    <ng-template carouselSlide>\n                                                        <div class=\"item\">\n                                                            <div class=\"py-3\">\n                                                                <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                    ton of\n                                                                    options. If you just want the HTML to integrate with\n                                                                    your project, then this is the package. You can find\n                                                                    the\n                                                                    files in the 'dist' folder...no need to install git\n                                                                    and\n                                                                    all the other stuff the documentation talks about. \"\n                                                                </p>\n\n                                                                <div>\n                                                                    <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </ng-template>\n                                                    <ng-template carouselSlide>\n                                                        <div class=\"item\">\n                                                            <div class=\"py-3\">\n                                                                <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                    are\n                                                                    as supportive as Themesbrand, Development with be a\n                                                                    nice\n                                                                    experience. You guys are Wonderful. Keep us the good\n                                                                    work. \"</p>\n\n                                                                <div>\n                                                                    <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                    <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                                </div>\n                                                            </div>\n\n                                                        </div>\n                                                    </ng-template>\n                                                </owl-carousel-o>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n\n            <div class=\"col-xl-3\">\n                <div class=\"auth-full-page-content p-md-5 p-4\">\n                    <div class=\"w-100\">\n\n                        <div class=\"d-flex flex-column h-100\">\n                            <div class=\"mb-4 mb-md-5\">\n                                <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                    <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                    <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                                </a>\n                            </div>\n                            <div class=\"my-auto\">\n                                <div>\n                                    <h5 class=\"text-primary\"> Reset Password</h5>\n                                    <p class=\"text-muted\">Re-Password with Skote.</p>\n                                </div>\n\n                                <div class=\"mt-4\">\n                                    <div class=\"alert alert-success text-center mb-4\" role=\"alert\">\n                                        Enter your Email and instructions will be sent to you!\n                                    </div>\n                                    <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\"\n                                    >\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n                                        <div class=\"mb-3\">\n                                            <label for=\"useremail\">Email</label>\n                                            <input type=\"email\" formControlName=\"email\" \n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" class=\"form-control\" id=\"useremail\"\n                                                placeholder=\"Enter email\">\n                                                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                                  </div>\n                                        </div>\n\n                                        <div class=\"text-end\">\n                                                <button class=\"btn btn-primary w-md\"\n                                                    type=\"submit\">Reset</button>\n                                            </div>\n\n                                    </form>\n                                    <div class=\"mt-5 text-center\">\n                                        <p>Remember It ? <a routerLink=\"/account/login-2\"\n                                                class=\"fw-medium text-primary\"> Sign In here</a> </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"mt-4 mt-md-5 text-center\">\n                                <p class=\"mb-0\">©{{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                    by Themesbrand</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <!-- end col -->\n        </div>\n        <!-- end row -->\n    </div>\n    <!-- end container-fluid -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-recoverpwd2',\n  templateUrl: './recoverpwd2.component.html',\n  styleUrls: ['./recoverpwd2.component.scss']\n})\nexport class Recoverpwd2Component implements OnInit {\n\n   // set the currenr year\n   year: number = new Date().getFullYear();\n\n   resetForm: FormGroup;\n   submitted = false;\n   error = '';\n   success = '';\n   loading = false;\n\n   constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit(): void {\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n\n  carouselOption: OwlOptions = {\n    items: 1,\n    loop: false,\n    margin: 0,\n    nav: false,\n    dots: true,\n    responsive: {\n      680: {\n        items: 1\n      },\n    }\n  }\n}\n","<div class=\"container-fluid p-0\">\n    <div class=\"row g-0\">\n\n        <div class=\"col-xl-9\">\n            <div class=\"auth-full-bg pt-lg-5 p-4\">\n                <div class=\"w-100\">\n                    <div class=\"bg-overlay\"></div>\n                    <div class=\"d-flex h-100 flex-column\">\n\n                        <div class=\"p-4 mt-auto\">\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-lg-7\">\n                                    <div class=\"text-center\">\n\n                                        <h4 class=\"mb-3\"><i\n                                                class=\"bx bxs-quote-alt-left text-primary h1 align-middle me-3\"></i><span\n                                                class=\"text-primary\">5k</span>+ Satisfied clients</h4>\n\n                                        <div dir=\"ltr\">\n                                            <owl-carousel-o class=\"owl-theme auth-review-carousel\"\n                                                [options]=\"carouselOption\">\n                                                <ng-template carouselSlide>\n                                                    <div class=\"item\">\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" Fantastic theme with a\n                                                                ton of\n                                                                options. If you just want the HTML to integrate with\n                                                                your project, then this is the package. You can find\n                                                                the\n                                                                files in the 'dist' folder...no need to install git\n                                                                and\n                                                                all the other stuff the documentation talks about. \"\n                                                            </p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">Abs1981</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </ng-template>\n                                                <ng-template carouselSlide>\n                                                    <div class=\"item\">\n                                                        <div class=\"py-3\">\n                                                            <p class=\"font-size-16 mb-4\">\" If Every Vendor on Envato\n                                                                are\n                                                                as supportive as Themesbrand, Development with be a\n                                                                nice\n                                                                experience. You guys are Wonderful. Keep us the good\n                                                                work. \"</p>\n\n                                                            <div>\n                                                                <h4 class=\"font-size-16 text-primary\">nezerious</h4>\n                                                                <p class=\"font-size-14 mb-0\">- Skote User</p>\n                                                            </div>\n                                                        </div>\n\n                                                    </div>\n                                                </ng-template>\n                                            </owl-carousel-o>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n\n        <div class=\"col-xl-3\">\n            <div class=\"auth-full-page-content p-md-5 p-4\">\n                <div class=\"w-100\">\n\n                    <div class=\"d-flex flex-column h-100\">\n                        <div class=\"mb-4 mb-md-5\">\n                            <a routerLink=\"/\" class=\"d-block auth-logo\">\n                                <img src=\"assets/images/logo-dark.png\" alt=\"\" height=\"18\" class=\"auth-logo-dark\">\n                                <img src=\"assets/images/logo-light.png\" alt=\"\" height=\"18\" class=\"auth-logo-light\">\n                            </a>\n                        </div>\n                        <div class=\"my-auto\">\n                            <div>\n                                <h5 class=\"text-primary\">Register account</h5>\n                                <p class=\"text-muted\">Get your free Skote account now.</p>\n                            </div>\n                            <div class=\"mt-4\">\n                                <form [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n                                    <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration\n                                        successfull.\n                                    </ngb-alert>\n\n                                    <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"username\">Username</label>\n                                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" id=\"username\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n                                            placeholder=\"Enter username\">\n                                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"useremail\">Email</label>\n                                        <input type=\"email\" formControlName=\"email\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                                            class=\"form-control\" id=\"useremail\" placeholder=\"Enter email\">\n                                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                            <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                        </div>\n                                    </div>\n\n                                    <div class=\"mb-3\">\n                                        <label for=\"userpassword\">Password</label>\n                                        <input type=\"password\" formControlName=\"password\"\n                                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                                            class=\"form-control\" id=\"userpassword\" placeholder=\"Enter password\">\n                                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                        </div>\n                                    </div>\n\n                                    <div>\n                                        <p class=\"mb-0\">By registering you agree to the Skote <a\n                                                href=\"javascript: void(0);\" class=\"text-primary\">Terms of Use</a>\n                                        </p>\n                                    </div>\n\n                                    <div class=\"mt-4 d-grid\">\n                                        <button class=\"btn btn-primary btn-block\" type=\"submit\">Register</button>\n                                    </div>\n\n                                    <div class=\"mt-4 text-center\">\n                                        <h5 class=\"font-size-14 mb-3\">Sign up using</h5>\n                                        <ul class=\"list-inline\">\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-primary text-white border-primary\">\n                                                    <i class=\"mdi mdi-facebook\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-info text-white border-info\">\n                                                    <i class=\"mdi mdi-twitter\"></i>\n                                                </a>\n                                            </li>\n                                            <li class=\"list-inline-item\">\n                                                <a href=\"javascript::void()\"\n                                                    class=\"social-list-item bg-danger text-white border-danger\">\n                                                    <i class=\"mdi mdi-google\"></i>\n                                                </a>\n                                            </li>\n                                        </ul>\n                                    </div>\n                                </form>\n\n                                <div class=\"mt-5 text-center\">\n                                    <p>Already have an account ? <a routerLink=\"/account/login-2\"\n                                            class=\"fw-medium text-primary\"> Login</a> </p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"mt-4 mt-md-5 text-center\">\n                            <p class=\"mb-0\">© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i>\n                                by Themesbrand</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- end col -->\n    </div>\n    <!-- end row -->\n</div>\n<!-- end container-fluid -->","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { OwlOptions } from 'ngx-owl-carousel-o';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-register2',\n  templateUrl: './register2.component.html',\n  styleUrls: ['./register2.component.scss']\n})\nexport class Register2Component implements OnInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  ngOnInit(): void {\n    document.body.classList.add('auth-body-bg')\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  carouselOption: OwlOptions = {\n    items: 1,\n    loop: false,\n    margin: 0,\n    nav: false,\n    dots: true,\n    responsive: {\n      680: {\n        items: 1\n      },\n    }\n  }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"account-pages my-5 pt-sm-5\">\n  <div class=\"container\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 col-lg-6 col-xl-5\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"bg-soft bg-primary\">\n            <div class=\"row\">\n              <div class=\"col-7\">\n                <div class=\"text-primary p-4\">\n                  <h5 class=\"text-primary\">Free Register</h5>\n                  <p>Get your free Skote account now.</p>\n                </div>\n              </div>\n              <div class=\"col-5 align-self-end\">\n                <img src=\"assets/images/profile-img.png\" alt=\"\" class=\"img-fluid\">\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body pt-0\">\n            <div>\n              <a routerLink=\"/\">\n                <div class=\"avatar-md profile-user-wid mb-4\">\n                  <span class=\"avatar-title rounded-circle bg-light\">\n                    <img src=\"assets/images/logo.svg\" alt=\"\" class=\"rounded-circle\" height=\"34\">\n                  </span>\n                </div>\n              </a>\n            </div>\n            <div class=\"p-2\">\n\n              <form class=\"needs-validation\" name=\"signupForm\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\"\n                novalidate>\n\n                <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\n                </ngb-alert>\n\n                <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                <div class=\"mb-3\">\n                  <label for=\"username\" class=\"form-label\">Username</label>\n\n                  <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\"\n                    placeholder=\"Enter username\" />\n\n                  <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"email\" class=\"form-label\">Email</label>\n\n                  <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\" />\n\n                  <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                    <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                  </div>\n                </div>\n\n                <div class=\"mb-3\">\n                  <label for=\"password\" class=\"form-label\">Password</label>\n\n                  <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\" placeholder=\"Password\" />\n\n                  <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                  </div>\n                </div>\n\n                <div class=\"mt-4 d-grid\">\n                  <button class=\"btn btn-primary\" type=\"submit\">Register</button>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <h5 class=\"font-size-14 mb-3\">Sign in with</h5>\n\n                  <ul class=\"list-inline\">\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-primary text-white border-primary\">\n                        <i class=\"mdi mdi-facebook\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-info text-white border-info\">\n                        <i class=\"mdi mdi-twitter\"></i>\n                      </a>\n                    </li>\n                    <li class=\"list-inline-item\">\n                      <a href=\"javascript::void()\" class=\"social-list-item bg-danger text-white border-danger\">\n                        <i class=\"mdi mdi-google\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n                <div class=\"mt-4 text-center\">\n                  <p class=\"mb-0\">By registering you agree to the Skote <a href=\"javascript: void(0);\"\n                      class=\"text-primary\">Terms of\n                      Use</a></p>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n        <!-- end card -->\n\n        <div class=\"mt-5 text-center\">\n          <p>Already have an account ? <a routerLink=\"/account/login\" class=\"fw-medium text-primary\"> Login</a>\n          </p>\n          <p>© {{year}} Skote. Crafted with <i class=\"mdi mdi-heart text-danger\"></i> by Themesbrand</p>\n        </div>\n      </div> <!-- end col -->\n    </div>\n    <!-- end row -->\n  </div>\n  <!-- end container -->\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n    private userService: UserProfileService) { }\n\n  ngOnInit() {\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/dashboard']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`/api/login`);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n"]}